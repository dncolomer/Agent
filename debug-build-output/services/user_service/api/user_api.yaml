openapi: 3.0.0
info:
  title: User Service API
  description: API contract for the User Service, covering endpoints for user registration, authentication, and profile management.
  version: 1.0.0
servers:
  - url: https://api.example.com/user
    description: Production server
  - url: https://staging-api.example.com/user
    description: Staging server
paths:
  /register:
    post:
      summary: Register a new user
      operationId: registerUser
      requestBody:
        description: User registration details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Invalid input
        '409':
          description: User already exists
  /authenticate:
    post:
      summary: Authenticate a user
      operationId: authenticateUser
      requestBody:
        description: User authentication credentials
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAuthentication'
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Authentication failed
  /profile:
    get:
      summary: Get user profile
      operationId: getUserProfile
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '404':
          description: User not found
components:
  schemas:
    UserRegistration:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      required:
        - username
        - email
        - password
    UserResponse:
      type: object
      properties:
        userId:
          type: string
        username:
          type: string
        email:
          type: string
    UserAuthentication:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      required:
        - email
        - password
    AuthResponse:
      type: object
      properties:
        token:
          type: string
        expiresIn:
          type: integer
          format: int64
    UserProfile:
      type: object
      properties:
        userId:
          type: string
        username:
          type: string
        email:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
security:
  - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT