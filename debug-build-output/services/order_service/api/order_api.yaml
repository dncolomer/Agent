openapi: 3.0.0
info:
  title: Order Service API
  description: API contract for the Order Service, detailing endpoints for order processing, status updates, and order retrieval.
  version: 1.0.0
servers:
  - url: https://api.example.com/orders
    description: Production server
  - url: https://staging-api.example.com/orders
    description: Staging server
paths:
  /orders:
    post:
      summary: Create a new order
      operationId: createOrder
      requestBody:
        description: Order object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Invalid input
        '500':
          description: Internal server error
  /orders/{orderId}:
    get:
      summary: Retrieve an order by ID
      operationId: getOrderById
      parameters:
        - name: orderId
          in: path
          required: true
          description: ID of the order to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Order details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found
        '500':
          description: Internal server error
    put:
      summary: Update an existing order
      operationId: updateOrder
      parameters:
        - name: orderId
          in: path
          required: true
          description: ID of the order to update
          schema:
            type: string
      requestBody:
        description: Updated order object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Order updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid input
        '404':
          description: Order not found
        '500':
          description: Internal server error
  /orders/{orderId}/status:
    patch:
      summary: Update the status of an existing order
      operationId: updateOrderStatus
      parameters:
        - name: orderId
          in: path
          required: true
          description: ID of the order to update status
          schema:
            type: string
      requestBody:
        description: New status for the order
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [pending, processing, shipped, delivered, cancelled]
      responses:
        '200':
          description: Order status updated successfully
        '400':
          description: Invalid status value
        '404':
          description: Order not found
        '500':
          description: Internal server error
components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the order
        items:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
              quantity:
                type: integer
        totalAmount:
          type: number
          format: float
        status:
          type: string
          enum: [pending, processing, shipped, delivered, cancelled]
    OrderResponse:
      type: object
      properties:
        id:
          type: string
        message:
          type: string
          description: Response message detailing the result of the operation